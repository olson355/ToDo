{"version":3,"sources":["src/app.js","src/auth-config.js","src/environment.js","src/main.js","src/modules/home.js","src/modules/list.js","src/resources/index.js","src/resources/data/data-services.js","src/resources/data/todos.js","src/resources/data/users.js","src/resources/elements/flatpickr.js","src/resources/value-converters/completed.js","src/resources/value-converters/date-format.js"],"names":["App","configureRouter","config","router","addPipelineStep","map","route","moduleId","name","auth","authConfig","baseUrl","loginUrl","tokenName","authHeader","authToken","logoutRedirect","debug","testing","configure","window","regeneratorRuntime","aurelia","use","standardConfiguration","plugin","baseConfig","feature","developmentLogging","start","then","setRoot","Home","user","users","loginError","message","showLogin","showRegister","firstName","lastName","email","password","registerError","save","serverResponse","error","login","sessionStorage","setItem","JSON","stringify","response","navigate","catch","console","log","List","todos","parse","getItem","showList","showCompleted","priorities","activate","getUserTodos","_id","editTodo","todo","todoObj","createTodo","description","dateDue","Date","priority","saveTodo","alert","todoId","filesToUpload","length","uploadFile","deleteTodo","completeTodo","completed","toggleShowCompleted","changeFiles","Array","push","files","removeFile","index","splice","logout","removeItem","globalResources","DataServices","http","httpClient","BASE_URL","withBaseUrl","withDefaults","credentials","headers","withInterceptor","request","method","url","status","get","fetch","json","data","post","content","body","object","put","delete","uploadFiles","ToDos","TODO_SERVICE","todosArray","id","userId","formData","FormData","forEach","item","append","i","Users","USER_SERVICE","FlatPickerCustomElement","Element","defaultBindingMode","twoWay","element","bind","defaultConfig","altInput","altFormat","wrap","_config","Object","assign","onChange","onMonthChange","onYearChange","attached","flatpickr","querySelector","selectedDates","dateStr","instance","value","valueChanged","newDate","undefined","setDate","CompletedValueConverter","toView","array","filter","DateFormatValueConverter","format"],"mappings":"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","file":"app-bundle.js","sourcesContent":["\nimport {AuthorizeStep} from 'aurelia-auth';\n\nexport class App {\n  configureRouter(config, router) {\n    this.router = router;\n    config.addPipelineStep('authorize', AuthorizeStep);\n    config.map([\n      { route: ['', 'home'], \n      moduleId: './modules/home', \n      name: 'Home' \n    },\n      {\n         route: 'list', \n         moduleId: './modules/list', \n         name: 'List', \n         auth: true \n        }\n    ]);\n  }}\n\n\n","var authConfig = {\r\n    baseUrl: \"http://localhost:5000/api\",\r\n    loginUrl: '/users/login',\r\n    tokenName: 'token',\r\n    authHeader: 'Authorization',\r\n    authToken: '',\r\n    logoutRedirect: '#/home'\r\n  }\r\n  \r\n  export default authConfig;\r\n  ","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport config from './auth-config';\n\nimport regeneratorRuntime from 'regenerator-runtime';\nwindow.regeneratorRuntime = regeneratorRuntime;\n\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-auth', (baseConfig)=>{\n      baseConfig.configure(config);\n })\n\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","\r\nimport {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport { Users } from '../resources/data/users';\r\nimport {AuthService} from 'aurelia-auth';\r\n\r\n\r\n@inject(Router, Users, AuthService)\r\nexport class Home {\r\n  constructor(router, user, auth) {\r\n    this.router = router;\r\n    this.users = user;\r\n    this.auth = auth;\r\n    this.loginError = '';\r\n          this.message = 'Home';\r\n          this.showLogin = true;\r\n  }\r\nshowRegister(){\r\n    this.user = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n        }\r\n        this.registerError = \"\";\r\n        \r\n\tthis.showLogin = false;\r\n}\r\n  async save() {\r\n          let serverResponse = await this.users.save(this.user);\r\n          if (!serverResponse.error) {\r\n            this.showLogin = true;\r\n          } else {\r\n            this.registerError = \"There was a problem registering the user.\"\r\n          }\r\n    }\r\n    login(){\r\n      return this.auth.login(this.email, this.password)\r\n      .then(response => {\r\n    sessionStorage.setItem(\"user\", JSON.stringify(response.user));\r\n    this.loginError = \"\";\r\n  \r\n      this.router.navigate('list');\r\n  })\r\n  .catch(error => {\r\n    console.log(error);\r\n    this.loginError = \"Invalid credentials.\";\r\n  });\r\n  };\r\n}    \r\n","import { inject } from 'aurelia-framework';\r\nimport { ToDos } from '../resources/data/todos';\r\nimport { Router } from 'aurelia-router';\r\nimport {AuthService} from 'aurelia-auth';\r\n\r\n@inject(ToDos, AuthService, Router)\r\nexport class List {\r\n\tconstructor(todos, auth, router) {\r\n\t\tthis.router = router;\r\n\t\tthis.todos = todos\r\n\t\tthis.auth = auth\r\n\t\tthis.user = JSON.parse(sessionStorage.getItem('user'));\r\n\t\tthis.showList = true;\r\n\t\tthis.showCompleted = false;\r\n\t\tthis.priorities = ['Low', 'Medium', 'High', 'Critical'];\r\n\t}\r\n\r\n\tasync activate() {\r\n\t\tawait this.todos.getUserTodos(this.user._id);\r\n\t}\r\n\r\n\teditTodo(todo) {\r\n\t\tthis.todoObj = todo;\r\n\t\tthis.showList = false;\r\n\t}\r\n\r\n\r\n\tcreateTodo() {\r\n\t\tthis.todoObj = {\r\n\t\t\ttodo: \"\",\r\n\t\t\tdescription: \"\",\r\n\t\t\tdateDue: new Date(),\r\n\t\t\tuser: this.user._id,\r\n\t\t\tpriority: this.priorities[0]\r\n\t\t}\r\n\t\tthis.showList = false;\r\n\t}\r\n\r\n\tasync saveTodo() {\r\n\t\tif (this.todoObj) {\r\n\t\t\tlet response = await this.todos.save(this.todoObj);\r\n\t\t\tif (response.error) {\r\n\t\t\t\talert(\"There was an error creating the ToDo\");\r\n\t\t\t} else {\r\n\t\t\t\tvar todoId = response._id;\r\n\t\t\t\tif (this.filesToUpload && this.filesToUpload.length) {\r\n\t\t\t\t\tawait this.todos.uploadFile(this.filesToUpload, this.user._id, todoId);\r\n\t\t\t\t\tthis.filesToUpload = [];\r\n\t\t\t\t}\t\t\t\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\tthis.showList = true;\r\n\t\t}\r\n\t}\r\n\tdeleteTodo(todo) {\r\n\t\tthis.todos.deleteTodo(todo._id);\r\n\t}\r\n\r\n\tcompleteTodo(todo) {\r\n\t\ttodo.completed = !todo.completed;\r\n\t\tthis.todoObj = todo;\r\n\t\tthis.saveTodo();\r\n\t}\r\n\r\n\ttoggleShowCompleted() {\r\n\t\tthis.showCompleted = !this.showCompleted;\r\n\t}\r\n\r\n\tchangeFiles() {\r\n\t\tthis.filesToUpload = new Array();\r\n\t\tthis.filesToUpload.push(this.files[0]);\r\n\t}\r\n\tremoveFile(index) {\r\n\t\tthis.filesToUpload.splice(index, 1);\r\n\t}\r\n\r\n\tlogout() {\r\n\t\tsessionStorage.removeItem('user');\r\n\t\tthis.auth.logout();\r\n\t}\r\n\r\n}\r\n","export function configure(config) {\n  config.globalResources([\n    './value-converters/date-format',\n    './value-converters/completed',\n    './elements/flatpickr'\n  ]);\n}\n","import { inject } from 'aurelia-framework';\r\nimport { HttpClient, json } from 'aurelia-fetch-client';\r\n\r\n@inject(HttpClient)\r\nexport class DataServices {\r\n\r\n    constructor(http) {\r\n\r\n\r\n        this.httpClient = http;\r\n        this.BASE_URL = \"http://localhost:5000/api/\";\r\n\r\n        this.httpClient.configure(config => {\r\n            config\r\n                .withBaseUrl(this.BASE_URL)\r\n                .withDefaults({\r\n                    credentials: 'same-origin',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'X-Requested-With': 'Fetch'\r\n                    }\r\n\r\n                })\r\n                .withInterceptor({\r\n                    request(request) {\r\n                        //add something here about retreiving a token- he will update aurelia slides and add to D2l\r\n                        console.log(`Requesting ${request.method} ${request.url}`);\r\n                        return request;\r\n                    },\r\n                    response(response) {\r\n                        console.log(`Received ${response.status} ${response.url}`);\r\n                        return response;\r\n                    }\r\n                });\r\n        });\r\n    }\r\n    get(url) {\r\n\r\n        return this.httpClient.fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                return data;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n    }\r\n    post(content, url) {\r\n        return this.httpClient\r\n            .fetch(url, {\r\n                method: 'post',\r\n                body: json(content)\r\n            })\r\n            .then(response => response.json())\r\n            .then(object => {\r\n                return object;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n    }\r\n    put(content, url) {\r\n        return this.httpClient\r\n            .fetch(url, {\r\n                method: 'put',\r\n                body: json(content)\r\n            })\r\n            .then(response => response.json())\r\n            .then(object => {\r\n                return object;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n    }\r\n    delete(url) {\r\n        return this.httpClient\r\n            .fetch(url, {\r\n                method: 'delete'\r\n            })\r\n            .then(response => response.json())\r\n            .then(object => {\r\n                return object;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n    }\r\n    uploadFiles(files, url){\r\n            return this.httpClient\r\n            .fetch(url, {\r\n                method: 'post',\r\n                body: files\r\n            })\r\n            .then(response => response.json())\r\n            .then(object => {\r\n                return object;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n        }\r\n        \r\n}\r\n\r\n\r\n\r\n","import { inject } from 'aurelia-framework';\r\nimport { DataServices } from './data-services';\r\n\r\n@inject(DataServices)\r\nexport class ToDos {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n        this.TODO_SERVICE = 'todos';\r\n        this.todosArray = [];\r\n    }\r\n\r\n    async getUserTodos(id) {\r\n        let response = await this.data.get(this.TODO_SERVICE + \"/user/\" + id);\r\n        if (!response.error && !response.message) {\r\n            this.todosArray = response;\r\n        }\r\n    }\r\n\r\n\r\n    async save(todo) {\r\n        if (todo) {\r\n            if (!todo._id) {\r\n\r\n                let serverResponse = await this.data.post(todo, this.TODO_SERVICE);\r\n                if (!serverResponse.error) {\r\n                    this.todosArray.push(serverResponse);\r\n                }\r\n                return serverResponse;\r\n            } else {\r\n                let response = await this.data.put(todo, this.TODO_SERVICE + \"/\" + todo._id);\r\n                if (!response.error) {\r\n                    // this.updateArray(response);\r\n                }\r\n                return response;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    async uploadFile(files, userId, todoId) {\r\n        let formData = new FormData();\r\n        files.forEach((item, index) => {\r\n            formData.append(\"file\" + index, item);\r\n        });\r\n\r\n        let response = await this.data.uploadFiles(formData, this.TODO_SERVICE + \"/upload/\" + userId + \"/\" + todoId);\r\n        return response;\r\n    }\r\n\r\n    async deleteTodo(id) {\r\n        let response = await this.data.delete(this.TODO_SERVICE + \"/\" + id);\r\n        if (!response.error) {\r\n            for (let i = 0; i < this.todosArray.length; i++) {\r\n                if (this.todosArray[i]._id === id) {\r\n                    this.todosArray.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {inject} from 'aurelia-framework';\r\nimport {DataServices} from './data-services';\r\n\r\n@inject(DataServices)\r\nexport class Users {\r\n\r\nconstructor(data) {\r\n        this.data = data;\r\n        this.USER_SERVICE = 'users';\r\n    }\r\n\r\nasync save(user){\r\n    if(user){\r\n        try{\r\n            let serverResponse = await this.data.post(user, this.USER_SERVICE);\r\n            return serverResponse;\r\n         } catch (error) {\r\n            console.log(error);\r\n            return error;\r\n        }\r\n    }\r\n\r\n}\r\n}\r\n","import { inject, bindable, bindingMode } from 'aurelia-framework';\r\nimport Flatpickr from 'flatpickr';\r\n@inject(Element)\r\nexport class FlatPickerCustomElement {\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) value;\r\n    constructor(element) {\r\n        this.element = element;\r\n    }\r\n    bind() {\r\n        const defaultConfig = {\r\n            altInput: true,\r\n            altFormat: \"F j, Y\",\r\n            wrap: true\r\n        };\r\n        this._config = Object.assign({}, defaultConfig);\r\n        this._config.onChange = this._config.onMonthChange = this._config.onYearChange = this.onChange.bind(this);\r\n    }\r\n    attached() {\r\n        this.flatpickr = new Flatpickr(this.element.querySelector('.aurelia-flatpickr'), this._config);\r\n    }\r\n    onChange(selectedDates, dateStr, instance) {\r\n        this.value = selectedDates[0]\r\n    }\r\n    valueChanged() {\r\n        if (!this.flatpickr) {\r\n            return;\r\n        }\r\n        if (this.value === this.flatpickr.selectedDates[0]) {\r\n            return;\r\n        }\r\n        let newDate = this.value ? this.value : undefined;\r\n        this.flatpickr.setDate(newDate);\r\n    }\r\n}\r\n","export class CompletedValueConverter {\r\n      \r\n       toView(array, value) {\r\n         if(!value){\r\n          return array.filter(item => {\r\n            return !item.completed;\r\n          })\r\n         } else {\r\n           return array;\r\n         }\r\n       }\r\n      }\r\n    ","import moment from 'moment';\r\n\r\nexport class DateFormatValueConverter {\r\n    toView(value) {\r\n        if (value === undefined || value === null) {\r\n            return;\r\n        }\r\n\r\n        return moment(value).format('MMM Do YYYY');\r\n    }\r\n} \r\n"],"sourceRoot":".."}